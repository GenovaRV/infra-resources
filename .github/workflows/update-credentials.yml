name: Synchronize Secrets

on:
  push:
    branches:
      - develop

jobs:
  synchronize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup AWS CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::248189943700:role/AWSReservedSSO_EKS-alumnos_a4561514b13725b0
          aws-region: eu-west-3
          role-session-name: ParameterStoreDeploymentSession

      - name: Sync Variables and Secrets
        run: |
          # Loop through all repository secrets
          for SECRET_NAME in $(echo "$SECRETS_JSON" | jq -r 'keys[] | select(. | startswith("${{ env.ANCHOR_PREFIX }}"))'); do
            NEW_SECRET_NAME_LOWERCASE=$(echo "$SECRET_NAME" | tr '[:upper:]' '[:lower:]')
            SECRET_VALUE=$(echo "$SECRETS_JSON" | jq -r .${SECRET_NAME})
            PARAM_NAME="${NEW_SECRET_NAME_LOWERCASE//_//}"
            aws ssm put-parameter --name "$PARAM_NAME" --value "$SECRET_VALUE" --type SecureString --overwrite
          done

          # Loop through all repository variables
          for VAR_NAME in $(echo "$VARS_JSON" | jq -r 'keys[] | select(. | startswith("${{ env.ANCHOR_PREFIX }}"))'); do
            NEW_VAR_NAME_LOWERCASE=$(echo "$VAR_NAME" | tr '[:upper:]' '[:lower:]')
            VAR_VALUE=$(echo "$VARS_JSON" | jq -r .${VAR_NAME})
            PARAM_NAME="${NEW_VAR_NAME_LOWERCASE//_//}"
            aws ssm put-parameter --name "$PARAM_NAME" --value "$VAR_VALUE" --type String --overwrite
          done
